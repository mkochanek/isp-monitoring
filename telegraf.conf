[global_tags]

# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logtarget = "file"
  logfile = ""
  logfile_rotation_interval = "0d"
  logfile_rotation_max_size = "0MB"
  logfile_rotation_max_archives = 5
  log_with_timezone = ""
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  urls = ["http://127.0.0.1:8086"]
  database = "telegraf"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

# Read metrics about disk usage by mount point
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]
  # no configuration

# Get kernel statistics from /proc/stat
[[inputs.kernel]]
  # no configuration

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

# Get the number of processes and group them by status
[[inputs.processes]]
  # no configuration

# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]

# # Read metrics from one or more commands that can output to stdout
[[inputs.exec]]
   commands = ["/usr/bin/speedtest.sh"]
   name_override = "Speedtest"
   timeout = "50s"
   interval = "1m"
   data_format = "json"
   json_string_fields = [
     "host",
     "interface_externalIp",
     "server_name",
     "server_id",
     "server_location",
     "server_host",
     "server_ip",
     "result_url"
   ]

# # Ping given url(s) and return statistics
[[inputs.ping]]
   urls = ["wp.pl", "onet.pl", "google.com"]

# # Monitors internet speed using speedtest.net service
[[inputs.internet_speed]]
#   ## Sets if runs file download test
#   ## Default: false
   enable_file_download = true
